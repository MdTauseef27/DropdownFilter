[{"E:\\source\\DropdownFilter\\src\\index.js":"1","E:\\source\\DropdownFilter\\src\\App.js":"2","E:\\source\\DropdownFilter\\src\\reportWebVitals.js":"3","E:\\source\\DropdownFilter\\src\\Components\\DropdownFilter.jsx":"4","E:\\source\\DropdownFilter\\src\\Components\\CardExample.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":294,"mtime":1607313541455,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1867,"mtime":1607313534332,"results":"10","hashOfConfig":"7"},{"size":1277,"mtime":1607399528048,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1o6kwre",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\source\\DropdownFilter\\src\\index.js",[],["25","26"],"E:\\source\\DropdownFilter\\src\\App.js",["27"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { DropdownFilter } from \"./Components/DropdownFilter\";\nimport { CardExample } from \"./Components/CardExample\";\n\nfunction App() {\n  return (\n    <div>\n      <DropdownFilter />\n      <CardExample />\n    </div>\n  );\n}\n\nexport default App;\n","E:\\source\\DropdownFilter\\src\\reportWebVitals.js",[],"E:\\source\\DropdownFilter\\src\\Components\\DropdownFilter.jsx",["28","29","30"],"import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport \"react-dropdown/style.css\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\n\r\nexport const DropdownFilter = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState(\"1\");\r\n  const [rowdata, setRowData] = useState([\r\n    { value: 1, lable: \"Chair\", category: 2 },\r\n    { value: 2, lable: \"Laptop\", category: 2 },\r\n    { value: 3, lable: \"Bed\", category: 1 },\r\n    { value: 4, lable: \"Fan\", category: 1 },\r\n    { value: 5, lable: \"Keyboard\", category: 2 },\r\n    { value: 6, lable: \"Sofa\", category: 1 },\r\n    { value: 7, lable: \"TV\", category: 2 },\r\n    { value: 8, lable: \"Bat\", category: 3 },\r\n    { value: 9, lable: \"AC\", category: 1 },\r\n  ]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const categories = [\r\n    { label: \"Furniture and Home\", value: 1 },\r\n    { label: \"Electronic\", value: 2 },\r\n    { label: \"Sports\", value: 3 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.log(\"Selected Categor::\", selectedCategory.value, \"---\", rowdata);\r\n    const filtered = rowdata.filter(\r\n      (item) => item.category == selectedCategory.value\r\n    );\r\n    console.log(\"filteredData====>\", filtered);\r\n    setFilteredData(filtered);\r\n  }, [selectedCategory]);\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown options={categories} onChange={(e) => setSelectedCategory(e)} />\r\n      <div className=\"ag-theme-alpine\" style={{ height: 400, width: 600 }}>\r\n        <AgGridReact rowData={filteredData}>\r\n          <AgGridColumn field=\"value\"></AgGridColumn>\r\n          <AgGridColumn field=\"lable\"></AgGridColumn>\r\n          <AgGridColumn field=\"category\"></AgGridColumn>\r\n        </AgGridReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\source\\DropdownFilter\\src\\Components\\CardExample.jsx",["31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":10,"column":19,"nodeType":"40","messageId":"41","endLine":10,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":31,"column":31,"nodeType":"45","messageId":"46","endLine":31,"endColumn":33},{"ruleId":"47","severity":1,"message":"48","line":35,"column":6,"nodeType":"49","endLine":35,"endColumn":24,"suggestions":"50"},{"ruleId":"38","severity":1,"message":"51","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":15},{"ruleId":"38","severity":1,"message":"52","line":6,"column":10,"nodeType":"40","messageId":"41","endLine":6,"endColumn":16},{"ruleId":"38","severity":1,"message":"53","line":6,"column":18,"nodeType":"40","messageId":"41","endLine":6,"endColumn":27},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setRowData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rowdata'. Either include it or remove the dependency array.","ArrayExpression",["56"],"'imgLogo' is defined but never used.","'isShow' is assigned a value but never used.","'setISShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [rowdata, selectedCategory]",{"range":"59","text":"60"},[1387,1405],"[rowdata, selectedCategory]"]